
<span id="info"></span>
<div class="row">
  <div class="col-md-12">
    <!-- BEGIN BASIC PORTLET-->
    <div class="portlet box blue">
      <div class="portlet-title">
        <div class="caption">
          <i class="fa fa-gift"></i>New GeoFence
        </div>
        <div class="tools">
          <a href="javascript:;" class="collapse">
          </a>
          <a href="#portlet-config" data-toggle="modal" class="config">
          </a>
          <a href="javascript:;" class="reload">
          </a>
          <a href="javascript:;" class="remove">
          </a>
        </div>
      </div>
      <div class="portlet-body form">
        <input type="text" placeholder="Search Box" id="pac-input" class="form-control" style="width:40%;margin-top:10px;"></input>
          <div id="googleMap" style="width:100%;height:400px;">
          </div>
        <div class="form-actions fluid">
          <div class="row">
            <div class="col-md-offset-4 col-md-9 geo_fence_form">
              <div class="col-md-3">
                <input id="geo_fence_name" type="text" class="form-control" placeholder="Name" />
              </div>
              <div class="col-md-3">
                <input id="geo_fence_type" type="text" class="form-control" placeholder="Type" />
              </div>
<!--               <div class="col-md-3">
                <input type="text" class="form-control" name="Enabled" />
              </div> -->
              <button type="button" class="btn green" onclick="saveGeoFence();">Save</button>
              <a class="btn default" href="<%=new_geo_fence_path%>" data-no-turbolink=true>
                Cancel
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
    <!-- END BASIC PORTLET-->
  </div>
</div>

<script>

  var map;
  var marker;
  var infowindow;
  var start = new google.maps.LatLng(31.528854654816588, 74.28192257881165);
  var end = new google.maps.LatLng(31.525727008258347, 74.27833914756775);

  var searchBoxLocation;

  var circle;
  var circle_center;
  var circle_radius;

  function initialize(){

    
  var mapProp = {
    center:new google.maps.LatLng(33.5190755, -111.9253654),
    zoom:12,
    mapTypeId:google.maps.MapTypeId.ROADMAP
    };

    map = new google.maps.Map(document.getElementById("googleMap"),mapProp);
    // Seeting circle first time on map
    setCircle(new google.maps.LatLng(33.5004686, -111.9027061), 20);


    /*=======================Search Box Logic=============Start========*/
    var searchBox = new google.maps.places.SearchBox(document.getElementById('pac-input'));
    map.controls[google.maps.ControlPosition.TOP_CENTER].push(document.getElementById('pac-input'));
    google.maps.event.addListener(searchBox, 'places_changed', function() {
      searchBox.set('map', null);


      var places = searchBox.getPlaces();

      var bounds = new google.maps.LatLngBounds();
      var i, place;
      for (i = 0; place = places[i]; i++) {
        (function(place) {
          // myPolygon.setMap(null);

          searchBoxLocation = place.geometry.location

          // Place found in SearchBox
          var marker = new google.maps.Marker({position:searchBoxLocation});

          // Circle Code
           circle.setMap(null);
           setCircle(searchBoxLocation, 5);


          // marker.bindTo('map', searchBox, 'map');
          google.maps.event.addListener(marker, 'map_changed', function() {
            if (!this.getMap()) {
              this.unbindAll();
            }
          });
          bounds.extend(place.geometry.location);


        }(place));

      }
      map.fitBounds(bounds);
      searchBox.set('map', map);
      map.setZoom(Math.min(map.getZoom(),15));

    });
    /*=======================Search Box Logic=============End========*/

  }

  google.maps.event.addDomListener(window, 'load', initialize);


  function setCircle(center, r){ // A method to set Circle on Map
        circle_radius = r * 100
        circle_center = center.toUrlValue(8);

        circle = new google.maps.Circle({
        center: center,
        map: map,
        radius: circle_radius,          // Meters
        fillColor: '#FF0000',
        fillOpacity: 0.3,
        strokeColor: "#FF0000",
        strokeWeight: 0,         
        editable: true,
        draggable: true
    });

    circle.setMap(map);

    google.maps.event.addListener(circle, 'center_changed', function () { //Circle Event Handler
        circle_center = circle.getCenter().toUrlValue(8);
        console.log("Center: "+circle.getCenter());
    });
    google.maps.event.addListener(circle, 'radius_changed', function () { //Circle Event Handler
        circle_radius = circle.getRadius(); // Meters
        console.log("Raduis: "+circle.getRadius());
    });
  }


  function saveGeoFence(){ // Saving to DB
    var name = $("#geo_fence_name").val();
    var type = $("#geo_fence_type").val();
    var inputs = $(".geo_fence_form").find('input');
    var errors = check_validation_errors(inputs)
    if (!errors) {
      $.ajax({
            url: '/geo_fences',
            data: {"center": circle_center, "radius": circle_radius, "name":name, "geo_fence_type":type},
            method: 'POST',
            success: function(data) {
              // alert("Created..!!");
            }
          });
      }
  }







</script>